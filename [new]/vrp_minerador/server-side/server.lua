-----------------------------------------------------------------------------------------------------------------------------------------
-- VRP
-----------------------------------------------------------------------------------------------------------------------------------------
local Tunnel = module("vrp","lib/Tunnel")
local Proxy = module("vrp","lib/Proxy")
vRP = Proxy.getInterface("vRP")
-----------------------------------------------------------------------------------------------------------------------------------------
-- CONNECTION
-----------------------------------------------------------------------------------------------------------------------------------------
cRP = {}
Tunnel.bindInterface("vrp_minerador",cRP)
vCLIENT = Tunnel.getInterface("vrp_minerador")
-----------------------------------------------------------------------------------------------------------------------------------------
-- VARIABLES
-----------------------------------------------------------------------------------------------------------------------------------------
local saveList = {}
local mineradorList = {}
-----------------------------------------------------------------------------------------------------------------------------------------
-- VARIABLES
-----------------------------------------------------------------------------------------------------------------------------------------
function mineradorMakeList(status)
	mineradorList = {
		[1] = { 2955.65,2767.19,39.99,200.17 },
		[2] = { 2949.79,2765.17,39.66,113.55 },
		[3] = { 2939.9,2766.47,40.46,70.93 },
		[4] = { 2933.38,2772.88,39.22,43.74 },
		[5] = { 2934.2,2783.51,39.37,6.3 },
		[6] = { 2931.23,2786.48,39.93,45.34 },
		[7] = { 2927.02,2790.75,40.3,330.22 },
		[8] = { 2925.93,2793.11,41.11,41.47 },
		[9] = { 2926.13,2796.5,41.39,234.7 },
		[10] = { 2922.54,2800.16,41.37,82.74 },
		[11] = { 2938.31,2813.83,43.53,299.07 },
		[12] = { 2943.95,2817.7,42.84,316.52 },
		[13] = { 2949.52,2820.22,42.88,306.9 },
		[14] = { 2957.94,2821.17,42.77,286.35 },
		[15] = { -722.52,-1508.58,5.01,107.34 },
		[16] = { -680.74,-1324.6,5.11,268.67 },
		[17] = { -681.07,-1322.48,5.11,267.51 },
		[18] = { -829.53,-1259.56,5.01,47.34 },
		[19] = { -921.81,-1160.57,4.77,211.14 },
		[20] = { -1075.81,-1273.09,5.85,27.44 },
		[21] = { 2938.09,2757.71,44.03,171.95 },
		[22] = { 2931.7,2761.73,44.94,59.88 },
		[23] = { 2928.12,2767.73,44.38,303.11 },
		[24] = { 2941.92,2760.17,42.26,262.0 },
		[25] = { 2944.13,2756.31,43.59,234.31 },
		[26] = { 2947.38,2754.74,43.94,339.56 },
		[27] = { 2954.31,2753.62,43.95,218.6 },
		[28] = { 2955.71,2756.76,44.32,101.76 },
		[29] = { 2955.68,2754.81,43.46,115.32 },
		[30] = { 2945.04,2734.78,45.2,159.92 },
		[31] = { 2948.37,2731.93,45.93,221.43 },
		[32] = { 2947.52,2728.01,46.94,223.36 },
		[33] = { 2973.53,2797.69,41.27,339.27 },
		[34] = { 2975.76,2796.02,41.05,234.99 },
		[35] = { 2976.52,2793.43,40.87,240.48 },
		[36] = { 2980.23,2791.77,41.38,154.53 },
		[37] = { 2981.66,2787.84,40.94,223.63 },
		[38] = { 2981.38,2783.4,39.85,203.3 },
		[39] = { 2924.94,2800.82,41.55,346.4 },
		[40] = { 2927.85,2807.48,42.77,339.36 },
		[41] = { 2988.19,2719.18,56.38,269.17 },
		[42] = { 2992.42,2720.3,57.06,286.81 },
		[43] = { 2992.86,2718.95,57.24,186.7 },
		[44] = { 2992.51,2722.03,56.94,349.63 },
		[45] = { 2995.85,2724.07,57.04,285.41 },
		[46] = { 2998.6,2722.06,57.48,261.06 },
		[47] = { 2995.87,2718.39,58.34,214.69 },
		[48] = { 2986.56,2705.79,64.6,120.87 },
		[49] = { 2984.53,2701.92,64.15,148.06 },
		[50] = { 2978.89,2694.28,63.98,137.58 },
		[51] = { 2977.17,2693.02,64.04,252.4 },
		[52] = { 2949.03,2692.96,66.23,53.91 },
		[53] = { 2944.4,2821.36,43.3,234.06 },
		[54] = { 2946.51,2819.6,42.76,224.37 },
		[55] = { 2949.81,2817.26,42.34,243.75 },
		[56] = { 2958.75,2818.6,43.02,279.55 },
		[57] = { 2937.17,2815.95,43.76,91.1 },
		[58] = { 2931.58,2817.82,45.58,72.51 },
		[59] = { 2926.74,2814.54,45.21,138.55 },
		[60] = { 2917.18,2799.1,41.3,0.28 },
		[61] = { 2920.21,2798.05,41.07,274.24 },
		[62] = { 2924.76,2794.23,40.72,243.41 },
		[63] = { 2924.78,2791.8,40.58,170.46 },
		[64] = { 2927.11,2789.96,40.18,271.97 },
		[65] = { 2927.76,2787.91,39.78,161.03 },
		[66] = { 2930.04,2789.15,39.98,329.64 },
		[67] = { 2931.93,2786.48,39.57,218.56 },
		[68] = { 2933.16,2783.32,39.25,176.99 },
		[69] = { 2938.74,2770.05,39.09,254.01 },
		[70] = { 2939.08,2771.39,39.25,79.31 },
		[71] = { 2937.94,2772.59,39.25,168.67 },
		[72] = { 2938.28,2774.21,39.73,338.99 },
		[73] = { 2943.9,2759.87,42.26,298.83 },
		[74] = { 2940.24,2747.76,43.21,167.53 },
		[75] = { 2939.32,2743.4,43.4,165.49 },
		[76] = { 2940.94,2740.32,44.03,271.13 },
		[77] = { 2949.47,2739.05,45.09,267.71 },
		[78] = { 2947.49,2739.72,44.38,20.16 },

	}

	saveList = mineradorList
end
-----------------------------------------------------------------------------------------------------------------------------------------
-- THREADINITIAL
-----------------------------------------------------------------------------------------------------------------------------------------
Citizen.CreateThread(function()
	mineradorMakeList(false)
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- THREADTIMERS
-----------------------------------------------------------------------------------------------------------------------------------------
Citizen.CreateThread(function()
	while true do
		Citizen.Wait(120*60000)
		mineradorMakeList(true)
		Citizen.Wait(1000)
		TriggerClientEvent("vrp_minerador:insertBlips",-1,saveList)
		TriggerClientEvent("vrp_minerador:updateMineradorList",-1,saveList)
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- minerador
-----------------------------------------------------------------------------------------------------------------------------------------
RegisterCommand("minerador",function(source,args,rawCommand)
	local user_id = vRP.getUserId(source)
	if user_id then
		local inService = vCLIENT.getMineradorStatus(source)
		if inService then
			vCLIENT.stopminerador(source)
		else
			vCLIENT.startminerador(source)
			TriggerClientEvent("vrp_minerador:insertBlips",source,saveList)
			TriggerClientEvent("vrp_minerador:updateMineradorList",source,saveList)
			TriggerClientEvent("Notify",source,"sucesso","VocÃª iniciou o emprego de <b>Minerador</b>.",3000)
		end
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- PAYMENTMETHOD
-----------------------------------------------------------------------------------------------------------------------------------------
function cRP.paymentMethod(MineradorId)
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id then
		if vRP.computeInvWeight(user_id) + 1 > vRP.getBackpack(user_id) then
			return
		end
		--- ADICIONAR AQUI A ANIMACAO 
		local random = math.random(100)
		if parseInt(random) >= 81 then
			vRP.giveInventoryItem(user_id,"pepitadeprata",math.random(5),true)
		elseif parseInt(random) >= 61 and parseInt(random) <= 80 then
			vRP.giveInventoryItem(user_id,"pepitadeouro",math.random(5),true)
		elseif parseInt(random) >= 41 and parseInt(random) <= 60 then
			vRP.giveInventoryItem(user_id,"copper",math.random(4),true)
		elseif parseInt(random) >= 26 and parseInt(random) <= 40 then
			vRP.giveInventoryItem(user_id,"aluminum",math.random(5),true)
		elseif parseInt(random) >= 10 and parseInt(random) <= 25 then
			vRP.giveInventoryItem(user_id,"pepitadebronze",math.random(5),true)
		end

		vRP.upgradeStress(user_id,1)
		saveList[parseInt(MineradorId)] = nil
		TriggerClientEvent("vrp_minerador:updateMineradorList",-1,saveList)
		TriggerClientEvent("vrp_minerador:removeMineradorBlips",-1,parseInt(MineradorId))
	end
end